// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(uuid())
  email            String          @unique
  passwordHash     String?
  emailVerifiedAt  DateTime?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  authProviders    AuthProvider[]
  urls             Url[]
}

model AuthProvider {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  provider   String
  providerId String
  createdAt  DateTime @default(now())

  @@unique([provider, providerId])
}

model Url {
  id          String   @id @default(uuid())
  user        User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId      String?
  shortCode   String   @unique
  originalUrl String
  clicks      Int      @default(0)
  expiresAt   DateTime?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  analytics   Click[]
}

model Click {
  id          String   @id @default(uuid())
  url         Url      @relation(fields: [urlId], references: [id], onDelete: Cascade)
  urlId       String
  countryCode String?
  deviceType  String?
  clickedAt   DateTime @default(now())
}
